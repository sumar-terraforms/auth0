name: "Terraform Plan"

on:
  push:
    branches:
      - develop
      - "release/**"
      - main
    paths:
      - "infra/terraform/**"
      - ".github/workflows/terraform*.yml"
  pull_request:
    branches:
      - develop
      - "release/**"
      - main
    paths:
      - "infra/terraform/**"
      - ".github/workflows/terraform*.yml"

jobs:
  format-validate:
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=infra/terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: |
          # initialize a working directory for validation 
          # without accessing any configured backend
          terraform -chdir=infra/terraform init -backend=false
      - name: Terraform Validate
        id: validate
        run: terraform -chdir=infra/terraform validate -no-color

  plan-auth0-develop:
    if: github.ref == 'refs/heads/develop'
    needs: format-validate
    environment:
      name: development
    env:
      TF_VAR_auth0_domain: "${{ vars.AUTH0_DOMAIN }}"
      TF_VAR_auth0_client_id: "${{ vars.AUTH0_CLIENT_ID }}"
      TF_VAR_auth0_client_secret : "${{ secrets.AUTH0_CLIENT_SECRET }}"
      TF_VAR_aws_ses_access_key_id : "${{ vars.AWS_SES_ACCESS_KEY_ID }}"
      TF_VAR_aws_ses_secret_access_key: "${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}"
      TF_VAR_aws_ses_region: "${{ vars.AWS_SES_REGION }}"
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new development || terraform -chdir=infra/terraform workspace select development
      - name: Plan
        id: tf-plan
        run: terraform -chdir=infra/terraform plan -no-color
      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan.outputs.stdout }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

  plan-auth0-staging:
    if: startsWith(github.ref, 'refs/heads/release/')
    needs: format-validate
    environment:
      name: staging
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Prepare tfvars
        run: |
          cat << EOF > infra/terraform/terraform-staging.tfvars
            auth0_domain        = "${{ vars.AUTH0_DOMAIN }}"
            auth0_client_id     = "${{ vars.AUTH0_CLIENT_ID }}"
            auth0_client_secret = "${{ secrets.AUTH0_CLIENT_SECRET }}"
            # aws_ses_access_key_id     = ${{ vars.AWS_SES_ACCESS_KEY_ID }}
            # aws_ses_secret_access_key = ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
            # aws_ses_region            = ${{ vars.AWS_SES_REGION }}
          EOF
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new staging || terraform -chdir=infra/terraform workspace select staging
      - name: Plan
        run: terraform -chdir=infra/terraform plan -var-file=terraform-staging.tfvars -no-color

  plan-auth0-production:
    if: github.ref == 'refs/heads/main'
    needs: format-validate
    environment:
      name: production
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Prepare tfvars
        run: |
          cat << EOF > infra/terraform/terraform-production.tfvars
            auth0_domain        = "${{ vars.AUTH0_DOMAIN }}"
            auth0_client_id     = "${{ vars.AUTH0_CLIENT_ID }}"
            auth0_client_secret = "${{ secrets.AUTH0_CLIENT_SECRET }}"
            # aws_ses_access_key_id     = ${{ vars.AWS_SES_ACCESS_KEY_ID }}
            # aws_ses_secret_access_key = ${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}
            # aws_ses_region            = ${{ vars.AWS_SES_REGION }}
          EOF
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new production || terraform -chdir=infra/terraform workspace select production
      - name: Plan
        run: terraform -chdir=infra/terraform plan -var-file=terraform-production.tfvars -no-color
