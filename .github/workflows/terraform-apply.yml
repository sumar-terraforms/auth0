name: "Terraform Apply"

on:
  workflow_dispatch:

jobs:
  populate-auth0-develop:
    if: github.ref == 'refs/heads/develop'
    environment:
      name: development
    env:
      TF_AUTH0_DOMAIN: "${{ vars.AUTH0_DOMAIN }}"
      TF_AUTH0_CLIENT_ID: "${{ vars.AUTH0_CLIENT_ID }}"
      TF_AUTH0_CLIENT_SECRET : "${{ secrets.AUTH0_CLIENT_SECRET }}"
      TF_AWS_SES_ACCESS_KEY_ID : "${{ vars.AWS_SES_ACCESS_KEY_ID }}"
      TF_AWS_SES_SECRET_ACCESS_KEY: "${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}"
      TF_AWS_SES_REGION: "${{ vars.AWS_SES_REGION }}"
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      # - name: Prepare tfvars
      #   run: |
      #     cat << EOF > infra/terraform/terraform-development.tfvars
      #       auth0_domain        = "${{ vars.AUTH0_DOMAIN }}"
      #       auth0_client_id     = "${{ vars.AUTH0_CLIENT_ID }}"
      #       auth0_client_secret = "${{ secrets.AUTH0_CLIENT_SECRET }}"
      #       # aws_ses_access_key_id     = "${{ vars.AWS_SES_ACCESS_KEY_ID }}"
      #       # aws_ses_secret_access_key = "${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}"
      #       # aws_ses_region            = "${{ vars.AWS_SES_REGION }}"
      #     EOF
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new development || terraform -chdir=infra/terraform workspace select development
      - name: Apply
        run: terraform -chdir=infra/terraform apply -auto-approve -no-color

  populate-auth0-staging:
    if: startsWith(github.ref, 'refs/heads/release/')
    environment:
      name: staging
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Prepare tfvars
        run: |
          cat << EOF > infra/terraform/terraform-staging.tfvars
            auth0_domain        = "${{ vars.AUTH0_DOMAIN }}"
            auth0_client_id     = "${{ vars.AUTH0_CLIENT_ID }}"
            auth0_client_secret = "${{ secrets.AUTH0_CLIENT_SECRET }}"
            # aws_ses_access_key_id     = "${{ vars.AWS_SES_ACCESS_KEY_ID }}"
            # aws_ses_secret_access_key = "${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}"
            # aws_ses_region            = "${{ vars.AWS_SES_REGION }}"
          EOF
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new staging || terraform -chdir=infra/terraform workspace select staging
      - name: Apply
        run: terraform -chdir=infra/terraform apply -auto-approve -var-file=terraform-staging.tfvars -no-color

  populate-auth0-production:
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    permissions:
      id-token: write
      contents: read
      issues: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.2"
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::676791758112:role/RoleForGithubActions
          role-session-name: github-deploy
          aws-region: ap-southeast-3
      - name: Prepare tfvars
        run: |
          cat << EOF > infra/terraform/terraform-production.tfvars
            auth0_domain        = "${{ vars.AUTH0_DOMAIN }}"
            auth0_client_id     = "${{ vars.AUTH0_CLIENT_ID }}"
            auth0_client_secret = "${{ secrets.AUTH0_CLIENT_SECRET }}"
            # aws_ses_access_key_id     = "${{ vars.AWS_SES_ACCESS_KEY_ID }}"
            # aws_ses_secret_access_key = "${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}"
            # aws_ses_region            = "${{ vars.AWS_SES_REGION }}"
          EOF
      - name: Init
        run: |
          terraform -chdir=infra/terraform init
          terraform -chdir=infra/terraform workspace new production || terraform -chdir=infra/terraform workspace select production
      - name: Apply
        run: terraform -chdir=infra/terraform apply -auto-approve -var-file=terraform-production.tfvars -no-color

